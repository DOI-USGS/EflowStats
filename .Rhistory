cat(siteNo,"\t",strftime(StartDt),"\t",strftime(EndDt),"\n\n")
tableOut
StormStart <- c(as.POSIXct("2013-10-03 15:18","%Y-%m-%d %H:%M"),as.POSIXct("2013-10-05 02:30","%Y-%m-%d %H:%M"))
StormStart
as.POSIXct("2013-10-05 02:30","%Y-%m-%d %H:%M")
?as.POSIXct
StormStart <- c(strptime("2013-10-03 15:18","%Y-%m-%d %H:%M"),strptime("2013-10-05 02:30","%Y-%m-%d %H:%M"))
StormStart
strptime("2013-10-05 02:30","%Y-%m-%d %H:%M")
)
}
strptime("2013-10-05 02:30","%Y-%m-%d %H:%M")
a<-strptime("2013-10-05 02:30","%Y-%m-%d %H:%M")
a
tableOut <- adaps_data_samples[,c("subNum","datetime","mL","perc")]
tableOut$subNum <- paste(storm_name,tableOut$subNum,sep="-")
fileName <- paste(storm_name,"sampVol",".txt",sep="")
strptime("2013-10-05 02:30","%Y-%m-%d %H:%M")
library(dataRetrieval)
library(googleVis)
source("M:/NonPoint Evaluation/GLRI Edge-of-field/Splitting Record Conversion to R/hydrographPDF.R")
source("M:/NonPoint Evaluation/GLRI Edge-of-field/Splitting Record Conversion to R/hydrographInteractive.R")
source("M:/NonPoint Evaluation/GLRI Edge-of-field/Splitting Record Conversion to R/labDataOut.R")
source("M:/NonPoint Evaluation/GLRI Edge-of-field/Splitting Record Conversion to R/getADAPSData.R")
# enter NWIS station id for gaging station
siteNo <- "434425090462401"
# enter date to begin pulling data (rounded to the day)
StartDt <- '2013-10-03'
# enter date to stop pulling data (rounded to the day)
EndDt <- '2013-10-05'
# enter NWIS station id for precipitation gaging station, may or may not be identical to "siteNo"
precipSite <- "434425090462401"
# enter the name of the storm(s) (for plot title)
storm_name <- "JF6-38&39"
# Retrieve data from NWISWeb (if available), or use file names to pull data in from files exported by ADAPS
adaps_data_all <- getADAPSData(siteNo,StartDt,EndDt,precipSite)
maxBottleVol <- 900
# enter the maximum possible volume for one full storm sample
maxSampVol <- 3900
# enter Storm Start date(s)
StormStart <- c(strptime("2013-10-03 15:18","%Y-%m-%d %H:%M"),strptime("2013-10-05 2:30","%Y-%m-%d %H:%M"))
# enter Storm End date(s)
StormEnd <- c(strptime("2013-10-03 21:15","%Y-%m-%d %H:%M"),strptime("2013-10-05 11:30","%Y-%m-%d %H:%M"))
# enter Storm Name(s)
StormName <- c("JF6-38","JF6-39")
# generate bottle volume table(s) for lab for each storm
tableOut <- labDataOut(adaps_data_all,StormStart,StormEnd,StormName,maxBottleVol,maxSampVol)
adaps_data_samples <- adaps_data_all[which(adaps_data_all$X05_99909>0),c("datetime","X02_00060")]
adaps_data_plot <- adaps_data_all[,c("datetime","X04_00045","X01_00065","X02_00060")]
tableOut <- list()
numStorms <- length(StormStart)
for (j in 1:numStorms) {
StartDt <- StormStart[j]
EndDt <- StormEnd[j]
adaps_data_storm <- adaps_data_plot[which(StartDt<=adaps_data_plot$datetime&adaps_data_plot$datetime<=EndDt),]
data_rows <- nrow(adaps_data_storm)
adaps_data_storm$volume <- 9999
for (i in 1:data_rows) {
if (i>1) {
if (i<data_rows) {
adaps_data_storm$volume[i] <- (.5*(as.numeric(difftime(adaps_data_storm$datetime[i],adaps_data_storm$datetime[i-1],units="secs")))*(.75*adaps_data_storm$X02_00060[i]+.25*adaps_data_storm$X02_00060[i-1]))+(.5*(as.numeric(difftime(adaps_data_storm$datetime[i+1],adaps_data_storm$datetime[i],units="secs")))*(.75*adaps_data_storm$X02_00060[i]+.25*adaps_data_storm$X02_00060[i+1]))
} else {
adaps_data_storm$volume[i] <- NA
}
} else {adaps_data_storm$volume[i] <- NA}
}
adaps_samp_storm <- adaps_data_samples[which(StartDt<=adaps_data_samples$datetime&adaps_data_samples$datetime<=EndDt),]
adaps_samp_storm$volume <- 9999
adaps_samp_storm$subNum <- 1
samplesNum <- nrow(adaps_samp_storm)
for (i in 1:samplesNum) {
adaps_samp_storm$subNum[i] <- i
sampStart <- ifelse(i>1,adaps_samp_storm$datetime[i-1]+(.5*(adaps_samp_storm$datetime[i]-adaps_samp_storm$datetime[i-1])),min(adaps_data_storm$datetime))
sampEnd <- ifelse(i<samplesNum,adaps_samp_storm$datetime[i]+(.5*(adaps_samp_storm$datetime[i+1]-adaps_samp_storm$datetime[i])),max(adaps_data_storm$datetime))
class(sampStart) <- "POSIXct"
class(sampEnd) <- "POSIXct"
adaps_samp_storm$volume[i] <- sum(adaps_data_storm$volume[which(adaps_data_storm$datetime>sampStart&adaps_data_storm$datetime<=sampEnd)],na.rm=TRUE)
}
adaps_samp_storm$perc <- 100*(adaps_samp_storm$volume/sum(adaps_data_storm$volume,na.rm=TRUE))
adaps_samp_storm$mL <- adaps_samp_storm$volume*maxBottleVol/max(adaps_samp_storm$volume)
tableOut[[j]] <- adaps_samp_storm[,c("subNum","datetime","mL","perc","volume")]
tableOut[[j]]$subNum <- paste(StormName[j],tableOut[[j]]$subNum,sep=" ")
}
tableOut
tableOut[[1]]
fileName <- paste(storm_name,"sampVol",".txt",sep="")
sink(fileName)
stormNum <- length(StormName)
tableText <- for (i in 1:stormNum) {
cat(StormName[i],"\t",strftime(StormStart[i]),"\t",strftime(StormEnd[i]),"\n\n")
tableOut[[i]]
cat("Lab Sample Volume","\t",sum(tableOut[[i]]$mL),"\t",sum(tableOut[[i]]$perc),"\n\n")
cat("Max Bottle Volume","\t",maxBottleVol,"\n\n")
cat("Max Sample Runoff Volume","\t",max(tableOut[[i]]$volume),"\n\n")
cat("Total Sampled Storm Volume","\t",sum(tableOut[[i]]$volume),"\n\n")
cat("Bottles ",tableOut[[i]]$subNum[1]," through ",tableOut[[i]]$subNum[length(tableOut[[i]]$subNum)]," picked up 10/05/2013","\n\n")
}
sink()
fileName <- paste(storm_name,"test",".txt",sep="")
sink(fileName)
stormNum <- length(StormName)
tableText <- for (i in 1:stormNum) {
tableOut[[i]]
}
sink()
test <- tableOut[[i]]
str(test)
test
fileName <- paste(storm_name,"test",".txt",sep="")
sink(fileName)
stormNum <- length(StormName)
tableText <- for (i in 1:stormNum) {
textOut <- tableOut[[i]]
textOut
}
sink()
fileName <- paste(storm_name,"test",".txt",sep="")
sink(fileName)
stormNum <- length(StormName)
for (i in 1:stormNum) {
textOut <- tableOut[[i]]
textOut
}
sink()
fileName <- paste(storm_name,"test",".txt",sep="")
sink(fileName)
stormNum <- length(StormName)
textOut <- tableOut[[1]]
textOut
sink()
fileName <- paste(storm_name,"test",".txt",sep="")
sink(fileName)
stormNum <- length(StormName)
tableOut[[1]]
sink()
for (i in 1:stormNum) {
assign(paste("storm",StormName[i],sep=""),tableOut[[i]])
}
StormName
stormJF6-38
paste("storm",StormName[i],sep="")
stormJF6-39
for (i in 1:stormNum) {
assign(paste("storm",i,sep=""),tableOut[[i]])
}
storm1
storm2
sink(fileName)
for (i in 1:stormNum) {
cat(StormName[i],"\t",strftime(StormStart[i]),"\t",strftime(StormEnd[i]),"\n\n")
storm1
cat("Lab Sample Volume","\t",sum(tableOut[[i]]$mL),"\t",sum(tableOut[[i]]$perc),"\n\n")
cat("Max Bottle Volume","\t",maxBottleVol,"\n\n")
cat("Max Sample Runoff Volume","\t",max(tableOut[[i]]$volume),"\n\n")
cat("Total Sampled Storm Volume","\t",sum(tableOut[[i]]$volume),"\n\n")
cat("Bottles ",tableOut[[i]]$subNum[1]," through ",tableOut[[i]]$subNum[length(tableOut[[i]]$subNum)]," picked up 10/05/2013","\n\n")
cat("========================================================================================================","\n\n")
}
sink()
sink(fileName)
for (i in 1:stormNum) {
cat(StormName[i],"\t",strftime(StormStart[i]),"\t",strftime(StormEnd[i]),"\n\n")
cat(storm1,"\n\n")
cat("Lab Sample Volume","\t",sum(tableOut[[i]]$mL),"\t",sum(tableOut[[i]]$perc),"\n\n")
cat("Max Bottle Volume","\t",maxBottleVol,"\n\n")
cat("Max Sample Runoff Volume","\t",max(tableOut[[i]]$volume),"\n\n")
cat("Total Sampled Storm Volume","\t",sum(tableOut[[i]]$volume),"\n\n")
cat("Bottles ",tableOut[[i]]$subNum[1]," through ",tableOut[[i]]$subNum[length(tableOut[[i]]$subNum)]," picked up 10/05/2013","\n\n")
cat("========================================================================================================","\n\n")
}
str(storm1)
storm1
source('C:/Users/jlthomps/Desktop/git/GLRIBMPs/labDataOut.R', echo=TRUE)
install.packages("googleVis")
install.packages("dataRetrieval",repos="http://usgs-r.github.com",type="source")
library(dataRetrieval)
library(googleVis)
source("M:/NonPoint Evaluation/GLRI Edge-of-field/Splitting Record Conversion to R/hydrographPDF.R")
source("M:/NonPoint Evaluation/GLRI Edge-of-field/Splitting Record Conversion to R/hydrographInteractive.R")
source("M:/NonPoint Evaluation/GLRI Edge-of-field/Splitting Record Conversion to R/labDataOut.R")
source("M:/NonPoint Evaluation/GLRI Edge-of-field/Splitting Record Conversion to R/getADAPSData.R")
# enter NWIS station id for gaging station
siteNo <- "434425090462401"
# enter date to begin pulling data (rounded to the day)
StartDt <- '2013-10-03'
# enter date to stop pulling data (rounded to the day)
EndDt <- '2013-10-05'
# enter NWIS station id for precipitation gaging station, may or may not be identical to "siteNo"
precipSite <- "434425090462401"
# enter the name of the storm(s) (for plot title)
storm_name <- "JF6-38&39"
# Retrieve data from NWISWeb (if available), or use file names to pull data in from files exported by ADAPS
adaps_data_all <- getADAPSData(siteNo,StartDt,EndDt,precipSite)
adaps_data_all <- getADAPSData(siteNo,StartDt,EndDt,precipSite)
library(dataRetrieval)
library(googleVis)
source("M:/NonPoint Evaluation/GLRI Edge-of-field/Splitting Record Conversion to R/hydrographPDF.R")
source("M:/NonPoint Evaluation/GLRI Edge-of-field/Splitting Record Conversion to R/hydrographInteractive.R")
source("M:/NonPoint Evaluation/GLRI Edge-of-field/Splitting Record Conversion to R/labDataOut.R")
source("M:/NonPoint Evaluation/GLRI Edge-of-field/Splitting Record Conversion to R/getADAPSData.R")
# enter NWIS station id for gaging station
siteNo <- "434425090462401"
# enter date to begin pulling data (rounded to the day)
StartDt <- '2013-10-03'
# enter date to stop pulling data (rounded to the day)
EndDt <- '2013-10-05'
# enter NWIS station id for precipitation gaging station, may or may not be identical to "siteNo"
precipSite <- "434425090462401"
# enter the name of the storm(s) (for plot title)
storm_name <- "JF6-38&39"
# Retrieve data from NWISWeb (if available), or use file names to pull data in from files exported by ADAPS
adaps_data_all <- getADAPSData(siteNo,StartDt,EndDt,precipSite)
POR <- getDataAvailability(siteNo,interactive=FALSE)
POR <- POR[which(POR$service=="uv"&POR$parameter_cd %in% c("00060","00065","99909")),]
PORprecip <- getDataAvailability(precipSite,interactive=FALSE)
PORprecip <- PORprecip[which(PORprecip$service=="uv"&PORprecip$parameter_cd=="00045"),]
POR
PORprecip
adaps_stage_in <- retrieveUnitNWISData(siteNo,'00065',StartDt,EndDt,format="tsv")
retrieveUnitNWISData
url <- constructNWISURL(siteNo,'00065',StartDt,EndDt,format="tsv",interactive=FALSE)
url <- constructNWISURL(siteNo,'00065',StartDt,EndDt,format="tsv","uv",interactive=FALSE)
url
retrieveUnitNWISData
getRDB1Data(url)
adaps_stage_in <- retrieveUnitNWISData(siteNo,'00065',StartDt,EndDt,format="tsv")
source('C:/Users/jlthomps/Desktop/git/GLRIBMPs/getADAPSData.R', echo=TRUE)
adaps_data_all <- getADAPSData(siteNo,StartDt,EndDt,precipSite)
POR <- getDataAvailability(siteNo,interactive=FALSE)
POR <- POR[which(POR$service=="uv"&POR$parameter_cd %in% c("00060","00065","99909")),]
PORprecip <- getDataAvailability(precipSite,interactive=FALSE)
PORprecip <- PORprecip[which(PORprecip$service=="uv"&PORprecip$parameter_cd=="00045"),]
adaps_stage_in <- retrieveUnitNWISData(siteNo,'00065',StartDt,EndDt,format="tsv",interactive=FALSE)
adaps_stage_in <- retrieveUnitNWISData(siteNo,'00065',StartDt,EndDt,format="tsv",interactive=FALSE)
retrieveUnitNWISData
getRDB1Data
adaps_data_all <- getADAPSData(siteNo,StartDt,EndDt,precipSite)
hydrographPlot <- hydrographInteractive(adaps_data_all)
plot(hydrographPlot)
str(adaps_data_all)
source('C:/Users/jlthomps/Desktop/git/GLRIBMPs/hydrographInteractive.R', echo=TRUE)
source('C:/Users/jlthomps/Desktop/git/GLRIBMPs/hydrographPDF.R', echo=TRUE)
source('C:/Users/jlthomps/Desktop/git/GLRIBMPs/getADAPSData.R', echo=TRUE)
hydrographPlot <- hydrographInteractive(adaps_data_all)
plot(hydrographPlot)
# Generate pdf of hydrograph to save, saved as file, eg 434425090462401hydrograph.pdf
hydrographPDF(adaps_data_all,storm_name)
source('C:/Users/jlthomps/Desktop/git/GLRIBMPs/getADAPSData.R', echo=TRUE)
adaps_data_all <- getADAPSData(siteNo,StartDt,EndDt,precipSite)
hydrographPlot <- hydrographInteractive(adaps_data_all)
plot(hydrographPlot)
tableOut <- adaps_data_all[,c("agency_cd","site_no","datetime","X01_00065","X02_00060","X05_99909","X04_00045")]
fileName <- paste(siteNo,"data.txt",sep="")
sink(fileName)
cat(siteNo,"\t",strftime(StartDt),"\t",strftime(EndDt),"\n\n")
tableOut
sink()
# enter the maximum possible volume for one sample bottle
maxBottleVol <- 900
# enter the maximum possible volume for one full storm sample
maxSampVol <- 3900
# enter Storm Start date(s)
StormStart <- c(strptime("2013-10-03 15:18","%Y-%m-%d %H:%M"),strptime("2013-10-05 2:30","%Y-%m-%d %H:%M"))
# enter Storm End date(s)
StormEnd <- c(strptime("2013-10-03 21:15","%Y-%m-%d %H:%M"),strptime("2013-10-05 11:30","%Y-%m-%d %H:%M"))
# enter Storm Name(s)
StormName <- c("JF6.38","JF6.39")
# enter number for 1st bottle of each storm, if a number other than 1 is desired
subNum <- c(1,1)
# generate bottle volume table(s) for lab for each storm
tableOut <- labDataOut(adaps_data_all,StormStart,StormEnd,StormName,maxBottleVol,maxSampVol)
# look at table(s) generated for lab sample instructions for storm event(s). determine if changes are needed
print(tableOut)
print(tableOut,row.names=FALSE)
print(tableOut[[1]],row.names=FALSE)
tableOut
tableOut$subNum
tableOut[[1]]$subNum
source('C:/Users/jlthomps/Desktop/git/GLRIBMPs/labDataOut.R', echo=TRUE)
source('C:/Users/jlthomps/Desktop/git/GLRIBMPs/getADAPSData.R', echo=TRUE)
source('C:/Users/jlthomps/Desktop/git/GLRIBMPs/labDataOut.R', echo=TRUE)
source('C:/Users/jlthomps/Desktop/git/GLRIBMPs/hydrographInteractive.R', echo=TRUE)
source('C:/Users/jlthomps/Desktop/git/GLRIBMPs/hydrographPDF.R', echo=TRUE)
source('C:/Users/jlthomps/Desktop/git/GLRIBMPs/getADAPSData.R', echo=TRUE)
source('C:/Users/jlthomps/Desktop/git/GLRIBMPs/labDataOut.R', echo=TRUE)
source('C:/Users/jlthomps/Desktop/git/GLRIBMPs/hydrographInteractive.R', echo=TRUE)
source('C:/Users/jlthomps/Desktop/git/GLRIBMPs/hydrographPDF.R', echo=TRUE)
library(dataRetrieval)
library(googleVis)
siteNo <- "434425090462401"
# enter date to begin pulling data (rounded to the day)
StartDt <- '2013-10-03'
# enter date to stop pulling data (rounded to the day)
EndDt <- '2013-10-05'
# enter NWIS station id for precipitation gaging station, may or may not be identical to "siteNo"
precipSite <- "434425090462401"
# enter the name of the storm(s) (for plot title)
storm_name <- "JF6-38&39"
# Retrieve data from NWISWeb (if available), or use file names to pull data in from files exported by ADAPS
adaps_data_all <- getADAPSData(siteNo,StartDt,EndDt,precipSite)
# example using files getADAPSData(siteNo,StartDt,EndDt,precipSite,stageFile="jf3stage.txt",dischFile="jf3disch.txt","jf3precip.txt","jf3scod.txt")
# Generate interactive googleVis plot
hydrographPlot <- hydrographInteractive(adaps_data_all)
plot(hydrographPlot)
# Generate pdf of hydrograph to save, saved as file, eg 434425090462401hydrograph.pdf
hydrographPDF(adaps_data_all,storm_name)
# save merged data for station/storm event, saved as file, eg 434425090462401data.txt
tableOut <- adaps_data_all[,c("agency_cd","site_no","datetime","X01_00065","X02_00060","X05_99909","X04_00045")]
fileName <- paste(siteNo,"data.txt",sep="")
sink(fileName)
cat(siteNo,"\t",strftime(StartDt),"\t",strftime(EndDt),"\n\n")
print(tableOut,row.names=FALSE)
sink()
# enter the maximum possible volume for one sample bottle
maxBottleVol <- 900
# enter the maximum possible volume for one full storm sample
maxSampVol <- 3900
# enter Storm Start date(s)
StormStart <- c(strptime("2013-10-03 15:18","%Y-%m-%d %H:%M"),strptime("2013-10-05 2:30","%Y-%m-%d %H:%M"))
# enter Storm End date(s)
StormEnd <- c(strptime("2013-10-03 21:15","%Y-%m-%d %H:%M"),strptime("2013-10-05 11:30","%Y-%m-%d %H:%M"))
# enter Storm Name(s)
StormName <- c("JF6.38","JF6.39")
# enter number for 1st bottle of each storm, if a number other than 1 is desired
subNum <- c(1,1)
# generate bottle volume table(s) for lab for each storm
tableOut <- labDataOut(adaps_data_all,StormStart,StormEnd,StormName,maxBottleVol,maxSampVol)
# look at table(s) generated for lab sample instructions for storm event(s). determine if changes are needed
print(tableOut)
#if a sample needs to be removed, enter the datetime(s) of the sample(s)
removeDate <- c(strptime("2013-10-05 03:00:00","%Y-%m-%d %H:%M"))
removeComment <- c("Ignore bottle JF6-2, broken in shipment")
tableOut <- labDataOut(adaps_data_all,StormStart,StormEnd,StormName,maxBottleVol,maxSampVol,removeDate)
print(tableOut)
#Once you are satisfied with the table output
#enter date(s) when samples were picked up
bottlePickup <- c("2013-10-04","2013-10-07")
# generate text file with storm event sample bottle volume table(s)
fileName <- paste(storm_name,"sampVol",".txt",sep="")
stormNum <- length(StormName)
sink(fileName)
for (i in 1:stormNum) {
cat(StormName[i],"\t",strftime(StormStart[i]),"\t",strftime(StormEnd[i]),"\n\n")
print(tableOut[[i]],row.names=FALSE)
cat("\n\n")
cat("Lab Sample Volume","\t",sum(tableOut[[i]]$mL),"\t",sum(tableOut[[i]]$perc),"\n\n")
cat("Max Bottle Volume","\t",maxBottleVol,"\n\n")
cat("Max Sample Runoff Volume","\t",max(tableOut[[i]]$volume),"\n\n")
cat("Total Sampled Storm Volume","\t",sum(tableOut[[i]]$volume),"\n\n")
cat("Bottles ",tableOut[[i]]$subNum[1]," through ",tableOut[[i]]$subNum[length(tableOut[[i]]$subNum)]," picked up ",bottlePickup[i],"\n\n")
if (length(removeComment[i])>0) {cat(removeComment[i],"\n\n")}
cat("========================================================================================================","\n\n")
}
sink()
install.packages("dataRetrieval",repos="http://usgs-r.github.com",type="source")
install.packages("dataRetrieval", repos = "http://usgs-r.github.com",
library(NWCCompare)
FlowStatsAll
FlowStats_all
install.packages("NWCCompare",repos="http://usgs-r.github.com",type="source")
install.packages("NWCCompare", repos = "http://usgs-r.github.com",
)
install.packages("NWCCompare",repos="http://usgs-r.github.com",type="source")
library(NWCCompare)
FlowStatsAll
FlowStats_all
install.packages("googleVis")
install.packages("dataRetrieval",repos="http://usgs-r.github.com",type="source")
library(dataRetrieval)
library(googleVis)
library(dataRetrieval)
library(googleVis)
source("M:/NonPoint Evaluation/GLRI Edge-of-field/Splitting Record Conversion to R/hydrographPDF.R")
source("M:/NonPoint Evaluation/GLRI Edge-of-field/Splitting Record Conversion to R/hydrographInteractive.R")
source("M:/NonPoint Evaluation/GLRI Edge-of-field/Splitting Record Conversion to R/labDataOut.R")
source("M:/NonPoint Evaluation/GLRI Edge-of-field/Splitting Record Conversion to R/getADAPSData.R")
# enter NWIS station id for gaging station
siteNo <- "433727088215801"
# enter date to begin pulling data (rounded to the day)
StartDt <- '2013-10-17'
# enter date to stop pulling data (rounded to the day)
EndDt <- '2013-10-19'
# enter NWIS station id for precipitation gaging station, may or may not be identical to "siteNo"
precipSite <- "433727088215801"
# enter the name of the storm(s) (for plot title)
storm_name <- "JF5-28"
# Retrieve data from NWISWeb (if available), or use file names to pull data in from files exported by ADAPS
adaps_data_all <- getADAPSData(siteNo,StartDt,EndDt,precipSite)
POR <- getDataAvailability(siteNo,interactive=FALSE)
POR <- POR[which(POR$service=="uv"&POR$parameter_cd %in% c("00060","00065","99909")),]
PORprecip <- getDataAvailability(precipSite,interactive=FALSE)
PORprecip <- PORprecip[which(PORprecip$service=="uv"&PORprecip$parameter_cd=="00045"),]
str(POR)
str(PORprecip)
adaps_stage_in <- retrieveUnitNWISData(siteNo,'00065',StartDt,EndDt,format="tsv",interactive=FALSE)
adaps_discharge_in <- retrieveUnitNWISData(siteNo,'00060',StartDt,EndDt,format="tsv",interactive=FALSE)
adaps_precip_in <- retrieveUnitNWISData(siteNo,'00045',StartDt,EndDt,format="tsv",interactive=FALSE)
scode_url <- constructNWISURL(siteNo,'99909',StartDt,EndDt,"uv",format="tsv",interactive=FALSE)
scode_url <- paste(scode_url,"&access=3",sep="")
adaps_scode_in <- getRDB1Data(scode_url,asDateTime=TRUE)
scode_url
siteNo <- "434034088252401"
# enter date to begin pulling data (rounded to the day)
StartDt <- '2013-10-17'
# enter date to stop pulling data (rounded to the day)
EndDt <- '2013-10-19'
# enter NWIS station id for precipitation gaging station, may or may not be identical to "siteNo"
precipSite <- "434034088252401"
# enter the name of the storm(s) (for plot title)
storm_name <- "JF5-28"
# Retrieve data from NWISWeb (if available), or use file names to pull data in from files exported by ADAPS
POR <- getDataAvailability(siteNo,interactive=FALSE)
POR <- POR[which(POR$service=="uv"&POR$parameter_cd %in% c("00060","00065","99909")),]
PORprecip <- getDataAvailability(precipSite,interactive=FALSE)
PORprecip <- PORprecip[which(PORprecip$service=="uv"&PORprecip$parameter_cd=="00045"),]
adaps_stage_in <- retrieveUnitNWISData(siteNo,'00065',StartDt,EndDt,format="tsv",interactive=FALSE)
adaps_discharge_in <- retrieveUnitNWISData(siteNo,'00060',StartDt,EndDt,format="tsv",interactive=FALSE)
adaps_precip_in <- retrieveUnitNWISData(siteNo,'00045',StartDt,EndDt,format="tsv",interactive=FALSE)
scode_url <- constructNWISURL(siteNo,'99909',StartDt,EndDt,"uv",format="tsv",interactive=FALSE)
scode_url <- paste(scode_url,"&access=3",sep="")
adaps_scode_in <- getRDB1Data(scode_url,asDateTime=TRUE)
scode_url
StartDt <- '2013-11-17'
# enter date to stop pulling data (rounded to the day)
EndDt <- '2013-11-19'
# enter NWIS station id for precipitation gaging station, may or may not be identical to "siteNo"
precipSite <- "434034088252401"
# enter the name of the storm(s) (for plot title)
storm_name <- "JF5-28"
# Retrieve data from NWISWeb (if available), or use file names to pull data in from files exported by ADAPS
adaps_data_all <- getADAPSData(siteNo,StartDt,EndDt,precipSite)
View(adaps_data_all)
# Build the package:
library(zoo)
library(chron)
library(doBy)
library(XML)
library(RCurl)
library(hydroGOF)
library(lmomco)
library(devtools)
library(devtools)
setwd("C:/Users/jlthomps/Desktop/git")
load_all("HITHATStats/",reset = TRUE)
setwd("C:/Users/jlthomps/Desktop/git/HITHATStats")
document()
run_examples()
library(devtools)
setwd("C:/Users/jlthomps/Desktop/git")
load_all("HITHATStats/",reset = TRUE)
setwd("C:/Users/jlthomps/Desktop/git/HITHATStats")
document()
run_examples()
library(devtools)
setwd("C:/Users/jlthomps/Desktop/git")
load_all("HITHATStats/",reset = TRUE)
setwd("C:/Users/jlthomps/Desktop/git/HITHATStats")
document()
run_examples()
library(devtools)
setwd("C:/Users/jlthomps/Desktop/git")
load_all("HITHATStats/",reset = TRUE)
setwd("C:/Users/jlthomps/Desktop/git/HITHATStats")
document()
run_examples()
dev.off()
library(devtools)
setwd("C:/Users/jlthomps/Desktop/git")
load_all("HITHATStats/",reset = TRUE)
setwd("C:/Users/jlthomps/Desktop/git/HITHATStats")
document()
run_examples()
check()
library(zoo)
library(chron)
library(doBy)
library(XML)
library(RCurl)
library(hydroGOF)
library(lmomco)
library(devtools)
setwd("C:/Users/jlthomps/Desktop/git")
load_all("HITHATStats/",reset = TRUE)
setwd("C:/Users/jlthomps/Desktop/git/HITHATStats")
document()
check()
run_examples()
check()
l7Q10
qfiletempf<-sampleData
day7mean <- rollmean(qfiletempf$discharge, 7, align = "right",
na.pad = TRUE)
day7rollingavg <- data.frame(qfiletempf, day7mean)
rollingavgs7day <- subset(day7rollingavg, day7rollingavg$day7mean !=
"NA")
min7daybyyear <- aggregate(rollingavgs7day$day7mean,
list(rollingavgs7day$year_val), min, na.rm=TRUE)
sort_7day<-sort(min7daybyyear$x)
rank_90<-floor(findrank(length(sort_7day),0.90))
if (rank_90 > 0) {
l7Q10<-sort_7day[rank_90]
} else {
l7Q10<-NaN
}
l7Q10
l7Q10(qfiletempf)
str(sampleData)
data<-sampleData
cv_daily<-cv(data)
l7Q10v<-l7Q10(data)
l7Q2v<-l7Q2(data)
return_10v<-return_10(data)
