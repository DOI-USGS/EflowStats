Magnitude stats:

MA1	Mean of the daily flow values for the entire record mean(x$discharge,na.rm=TRUE)
MA2	Median of the daily flow values for the entire record median(x$discharge,na.rm=TRUE)
MA3	Mean (or median - use preference option) of the coefficients of variation (standard deviation/mean) for each year. 
	Compute the coefficent of variation for each year of daily flows. Compute the mean/median of these.
	sdbyyr aggregate(x$discharge,list(x$year_val),FUN=sd,na.rm=TRUE)
	meanbyyr aggregate(x$discharge,list(x$year_val),FUN=mean,na.rm=TRUE)
	cvq sdbyyr/meanbyyr
	mean(cvq,na.rm=TRUE)*100
MA4	Standard deviation of the percentiles of the logs of the entire flow record divided by the mean of percentiles of 
	the logs. Compute the log10 of the daily flows for the entire record. Compute the 5th,10th,15th,20th,30th,35th,40th,
	45th,50th,55th,60th,65th,70th,75th,80th,85th,90th,95th percentiles for the log10s of the flow record. Percentiles 
	are computed by interpolating between the ordered (ascending) log10s of the flow values. Compute the standard 
	deviation and mean for the percentile vaules. Divide the standard deviation by the mean. 
	sortq sort(isolateq)
	percentiles[1] floor(findrank(length(sortq),0.05))
	percentiles[19] floor(findrank(length(sortq),0.95))
	mean mean(percentiles,na.rm=TRUE)
	sdev sd(percentiles,na.rm=TRUE)
	(sdev/mean)*100
MA5	Skewness of the entire flow record. Mean (MA1) divided by median (MA2).
	MA1(x)/MA2(x)
MA6	Range in daily flows is the ratio of the 10% to 90% exceedence values for the entire flow record. Compute the 5 to 
	95 percent exceedence values. Exceedence is computed by interpolating between the ordered (descending) values. 
	Divide the 10% exceedence value by the 90% value.
	percentiles[2]/percentiles[18]
MA7	Same as MA6, for 20% and 80% exceedence values.
	percentiles[4]/percentiles[16]
MA8	Same as MA6, for 25% and 75% exceedence values.
	percentiles[5]/percentiles[15]
MA9	Spread in daily flows is the ratio of the difference between the 90th and 10th percentile of the logs of the flow 
	data to the log of the median of the entire flow record. Compute the log10 of all flows. Compute the percentiles. 
	(percentiles[18]-percentiles[2])/log10(MA2(x))
MA10 	Same as MA9, but with 20th and 80th percentiles.
	(percentiles[16]-percentiles[4])/log10(MA2(x))
MA11	Same as MA9, but with 25th and 75th percentiles. 
	(percentiles[15]-percentiles[5])/log10(MA2(x))
MA12.23	Means (or medians - use preference option) of monthly flow values. Compute the means for each month over the 
	entire record. For examples, MA12 is the mean of all January flow values. 
	aggregate(x$discharge,list(x$month_val),mean,na.rm=TRUE)
MA24.35	Variability of monthly flow values. compute the standard deviation for each month in each year. Divide the sd by 
	the mean for each month. Mean (or median - use preference option) these values for each month across years. 
	sdmonbyyr aggregate(x$discharge,list(x$year_val,x$month_val),FUN=sd,na.rm=TRUE)
	meanbyyr aggregate(x$discharge,list(x$year_val,x$month_val),FUN=mean,na.rm=TRUE)
	cvmonbyyr sdmonbyyr/meanmonbyyr
	meanmoncv aggregate(cvmonbyyr,list(month),FUN=mean,na.rm=TRUE)
	ma24.35 medmoncv[2]*100
MA36	Variability across monthly flows. Compute the minimum, maximum and mean flows for each month in the entire flow 
	record. MA36 is the maximum monthly flow minus the minimum monthly flow divided by the median monthly flow.
	meanbymon aggregate(x$discharge,list(x$month_val),FUN=mean,na.rm=TRUE)
	maxbymon aggregate(x$discharge,list(x$month_val),FUN=max,na.rm=TRUE)
	minbymon aggregate(x$discharge,list(x$month_val),FUN=min,na.rm=TRUE)
	(max(maxbymon)-min(minbymon))/median(meanbymon)
MA37	Variability across monthly flows. Compute the first and third quartiles. MA37 is the third quartile minus the 
	first quartile divided by the median of the monthly means.
	perc_25 floor(findrank(lenghth(sortmeanbymon),0.25))
	(perc_75-perc_25)/median(meanbymon)
MA38	Same as MA37, but for the 10th and 90th percentiles.
	(perc_90-perc_10)/median(meanbymon)
MA39	Variability across monthly flows. Compute the standard deviation for the monthly means. MA39 is the standard 
	deviation times 100 divided by the mean of the monthly means.
	(sd(meanbymon)*100)/mean(meanbymon)
MA40	Skewness in the monthly flows. MA40 is the mean of the monthly flow means minus the median of the monthly means 
	divided by the median of the monthly means.
	(mean(meanbymon)-median(meanbymon))/median(meanbymon)
MA41	Annual runoff. Compute the annual mean daily flows. MA41 is the mean of the annual means divided by the drainage area.
	meanbyyr aggregate(x$discharge,list(x$year_val),FUN=mean,na.rm=TRUE)
	mean(meanbyyr)/drainarea
MA42	Variability across annual flows. MA42 is the maximum annual flow minus the minimum annual flow divided by the 
	median annual flow.
	(max(meanbyyr)-min(meanbyyr))/median(meanbyyr)
MA43	Same as MA42, but using the 25th and 75th percentiles. 
	perc_25 floor(findrank(length(sortmeanbyyr),0.25))
	(perc_75-perc_25)/median(meanbyyr)
MA44	Same as MA42, but using the 10th and 90th percentiles. 
	(perc_90-perc_10)/median(meanbyyr)
MA45	Skewness in the annual flows. MA45 is the mean of the annual flow means minus the median of the annual flows 
	divided by the median of the annual means.
	(mean(meanbyyr)-median(meanbyyr))/median(meanbyyr)

ML1.12	Mean (or median - use preference option) minimum flows for each month across all years. Compute the minimums for 
	each month. For example, ML1 is the mean of the minimums of all January flow values. 
	minbymonyr aggregate(x$discharge,list(x$year_val,x$month_val),FUN=min,na.rm=TRUE)
	meanminbymon aggregate(minbymonyr,list(month),FUN=mean,na.rm=TRUE)
	ml1 meanminbymon[1,2]
ML13	Variability across minimum monthly flow values. compute the mean and standard deviation for the minimum monthly 
	flows over the entire record. ML13 is the standard deviation times 100 divided by the mean minimum monthly flow.
	minmonbyyr aggregate(x$discharge,list(x$year_val,x$month_val),FUN=min,na.rm=TRUE)
	(sd(minmonbyyr)*100)/mean(minmonbyyr)
ML14	Compute the minimum annual flow for each year. ML14 is the mean of the ratios of minimum annual flows to the median 
	flow for each year.
	minbyyear aggregate(x$discharge,list(x$year_val),FUN=min,na.rm=TRUE)
	medbyyr aggregate(x$discharge,list(x$year_val),FUN=median,na.rm=TRUE)
	dfml14 minbyyr/medbyyr
	mean(dfml14)
ML15	Low flow index. ML15 is the mean of the ratios of minimum annual flows to the mean for for each year.
	meanbyyr aggregate(x$discharge,list(x$year_val),FUN=mean,na.rm=TRUE)
	dfml15 minbyyr/meanbyyr
	mean(dfml15)
ML16	Median of annual minimum flows. ML16 is the median of the ratios of minimum annual flows to the median flow for 
	each year. 
	median(dfml14)
ML17	Base flow. Compute the mean annual flows. Compute the minimum of a 7-day moving average flow for each year and 
	divide them by the mean annual flow for that year. ML17 is the mean (or median - use preference option) of ratios. 
	day7mean rollmean(x$discharge,7,align="right",na.pad=TRUE)
	min7daybyyear aggregate(day7mean,list(year_val),FUN=min)
	meanflow meanflowbyyear(x)
	bfi min7daybyyear/meanflow
ML18	Variability in base flow. Compute the standard deviation for the ratios of 7-day moving average flows to mean 
	annual flows for each year. ML18 is the standard deviation time 100 divided by the mean of the ratios.
	(sd(bfi)*100)/mean(bfi)
ML19	Base flow. Compute the ratios of the minimum annual flow to mean annual flow for each year. ML19 is the mean (or 
	median - use preference option) of these ratios times 100. 
	minbyyr aggregate(x$discharge,list(x$year_val),FUN=min,na.rm=TRUE)
	meanbyyr aggregate(x$discharge,list(x$year_val),FUN=mean,na.rm=TRUE)
	ratiominmean minbyyr/meanbyyr
	ml19 mean(ratiominmean)
ML20	Base flow. Divide the daily flow record into 5-day blocks. Find the minimum flow for each block. Assign the minimum 
	flow as a base flow for that block if 90% of that minimum flow is less than the minimum flows for the blocks on either
	side. Otherwise, set it to zero. Fill in the zero values using linear interpolation. Compute the total flow for 
	the entire record and the total base flow for the entire record. ML20 is the ratio of total flow to total base flow.
	sub_flow subset(x,x$discharge>0,na.rm=TRUE)
	numdays nrow(sub_flow)
	numsets round(numdays/5)
	sets c(1:numsets)
	sets_merge as.data.frame(as.vector(sort(rep.int(sets,5)))[1:nrow(x), ])
	merge_data as.data.frame(union(sub_flow,sets_merge))
	colnames(merge_data) c("date","discharge","month_val","year_val","day_val","jul_val","wy_val","seq_num")
	min5day aggregate(merge_data$discharge,list(merge_data$seq_num),FUN=min,na.rm=TRUE)
	merge_data merge(min5day,merge_data,by.x="Group.1",by.y="seq_num")
	colnames(merge_data) c("seq_num","base_flow","date","discharge","month_val","year_val","day_val","jul_val","wy_val")
	create data frame with seq_nu,0.9*base_flow,base_flow-1,base_flow+1
	create 4th field populated by base_flow or zero
	merge back in to main data frame
	if mean(subset(merge_data,seq_num==1)$base_flow)<(0.9*(mean(subset(merge_data,seq_num==2)$base_flow))) 
	or mean(subset(merge_data,seq_num==3)$base_flow)<(0.9*(mean(subset(merge_data,seq_num==2)$base_flow)))
	then merge_data$base_flow[merge_data$seq_num==2]<-0
	use approx to do linear interpolation
	
ML21	Variability across annual minimum flows. Compute the mean and standard deviation for the annual minimum flows. ML21 
	is the standard deviation times 100 divided by the mean. 
	minbyyr aggregate(x$discharge,list(x$year_val),FUN=min,na.rm=TRUE)
	(sd(minbyyr)*100)/mean(minbyyr)
ML22	Specific mean annual minimum flow. ML22 is the mean (or median - use preference option) of the annual minimum flows 
	divided by the drainage area. 
	minbyyr aggregate(x$discharge,list(x$year_val),FUN=min,na.rm=TRUE)
	(mean(minbyyr))/drainarea

MH1.12	Mean (or median - use preference option) maximum flows for each month across all years. Compute the maximums for 
	each month over the entire flow record. For example, MH1 is the mean of the maximums of all January flow values over 
	the entire record. 
	maxbymonyr aggregate(x$discharge,list(x$year_val,x$month_val),FUN=max,na.rm=TRUE)
	meanmaxbymon aggregate(maxbymonyr,list(month),FUN=mean,na.rm=TRUE)
	mh1 meanmaxbymon[1,2]
MH13	Variability across maximum monthly flow values. Compute the mean and standard deviation for the maximum monthly 
	flows over the entire flow record. MH13 is the standard deviation times 100 divided by the mean maximum monthly 
	flow for all years. 
	maxmonbyyr aggregate(x$discharge,list(x$year_val,x$month_val),FUN=max,na.rm=TRUE)
	(sd(maxmonbyyr)*100)/mean(maxmonbyyr)
MH15	High flow discharge index. compute the 1% exceedence value for the entire data record. MH15 is the 1% exceedence 
	value divided by the median flow for the entire record. 
	frank1 floor(findrank(length(sorq),0.01)
	hfcrit1 sortq[frank1]
	hfcrit1/ma2(x)
MH16	Same as MH15, but using the 10% exceedence value.
MH17	Same as MH15, but using the 25% exceedence value.
MH18	Variability across annual maximum flows. Compute the log10s of the maximum annual flows. Find the standard 
	deviation and mean for these values. MH18 is the sd times 100 divided by the mean.
	maxbyyr aggregate(x$discharge,list(x$year_val),FUN=max,na.rm=TRUE)
	log10maxbyyr log10(maxbyyr)
	(sd(log10maxbyyr)*100)/mean(log10maxbyyr)
MH19	Skewness in annual maximum flows. Take 2*number of years*sum
MH20	Specific mean annual maximum flow. MH20 is the mean (or median - use preference option) of the annual maximum 
	flows divided by the drainage area. 
	(mean(maxbyyr))/drainarea
MH21	High flow volume index. Compute the average volume for flow events above a threshold equal to the median flow 
	for the entire record. MH21 is the average volume divided by the median flow for the entire record.
	This description does not match the code. Currently implemented as average flow where flow is above threshold 
	divided by median of all flow
	flag where flow is above threshold
	calculate avg_ex mean(x$discharge)
	avg_ex/ma2(x)	
MH22	Same as MH21, but using a threshold of 3*median flow. 
MH23	Same as MH21, but using a threshold of 7*median flow. 
MH24	High peak flow. Compute the average peak flow value for flow events above a threshold equal to the median for for the 
	entire record. MH24 is the average peak flow divided by the median flow for the entire record. 
	hfcrit ma2(x)
	exchfcrit subset(x,x>hfcrit)
	meanex mean(exchfcrit)
	meanex/ma2(x)
MH25	High peak flow. Compute the average peak flow value for flow events above a threshold equal to three times the 
	median for for the entire record. MH25 is the average peak flow divided by the median flow for the entire record. 
	hfcrit 3*ma2(x)
	exchfcrit subset(x,x>hfcrit)
	meanex mean(exchfcrit)
	meanex/ma2(x)
MH26	High peak flow. Compute the average peak flow value for flow events above a threshold equal to seven times the 
	median for for the entire record. MH25 is the average peak flow divided by the median flow for the entire record.
MH27	High peak flow. Compute the average peak flow value for flow events above a threshold equal to the 75th percentile 
	value for the entire flow record. MH27 is the average peak flow divided by the median flow for the entire record.

	
	